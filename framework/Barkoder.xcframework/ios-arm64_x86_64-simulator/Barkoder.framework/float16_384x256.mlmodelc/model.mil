program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3402.3.2"}, {"coremlc-version", "3402.4.1"}, {"coremltools-component-torch", "2.3.1+cu121"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.2"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 256, 384]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 256, 384]> image__scaled__ = mul(x = image, y = image__scaled___y_0)[name = tensor<string, []>("image__scaled__")];
            tensor<int32, []> var_37 = const()[name = tensor<string, []>("op_37"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_44 = const()[name = tensor<string, []>("op_44"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_46 = const()[name = tensor<string, []>("op_46"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [16, 3, 3, 3]> model_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [16]> model_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024)))];
            tensor<fp16, [1, 3, 256, 384]> cast_11 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__)[name = tensor<string, []>("cast_11")];
            tensor<fp16, [1, 16, 128, 192]> input_1_cast_fp16 = conv(bias = model_0_conv_bias_to_fp16, dilations = var_46, groups = var_37, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_44, weight = model_0_conv_weight_to_fp16, x = cast_11)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<fp16, [1, 16, 128, 192]> input_3_cast_fp16 = silu(x = input_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, []> var_51 = const()[name = tensor<string, []>("op_51"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_58 = const()[name = tensor<string, []>("op_58"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_60 = const()[name = tensor<string, []>("op_60"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 16, 3, 3]> model_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_1_conv_weight_to_fp16"), val = tensor<fp16, [32, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [32]> model_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10432)))];
            tensor<fp16, [1, 32, 64, 96]> input_5_cast_fp16 = conv(bias = model_1_conv_bias_to_fp16, dilations = var_60, groups = var_51, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_58, weight = model_1_conv_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<fp16, [1, 32, 64, 96]> input_7_cast_fp16 = silu(x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, []> var_68 = const()[name = tensor<string, []>("op_68"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_76 = const()[name = tensor<string, []>("op_76"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_78 = const()[name = tensor<string, []>("op_78"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 32, 1, 1]> model_2_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10560)))];
            tensor<fp16, [32]> model_2_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12672)))];
            tensor<fp16, [1, 32, 64, 96]> input_9_cast_fp16 = conv(bias = model_2_cv1_conv_bias_to_fp16, dilations = var_78, groups = var_68, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = var_76, weight = model_2_cv1_conv_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 32, 64, 96]> var_81_cast_fp16 = silu(x = input_9_cast_fp16)[name = tensor<string, []>("op_81_cast_fp16")];
            tensor<int32, [2]> var_82 = const()[name = tensor<string, []>("op_82"), val = tensor<int32, [2]>([16, 16])];
            tensor<int32, []> var_83_axis_0 = const()[name = tensor<string, []>("op_83_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 16, 64, 96]> var_83_cast_fp16_0, tensor<fp16, [1, 16, 64, 96]> var_83_cast_fp16_1 = split(axis = var_83_axis_0, split_sizes = var_82, x = var_81_cast_fp16)[name = tensor<string, []>("op_83_cast_fp16")];
            tensor<int32, [2]> var_91 = const()[name = tensor<string, []>("op_91"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_93 = const()[name = tensor<string, []>("op_93"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_2_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12800)))];
            tensor<fp16, [16]> model_2_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17472)))];
            tensor<fp16, [1, 16, 64, 96]> input_13_cast_fp16 = conv(bias = model_2_m_0_cv1_conv_bias_to_fp16, dilations = var_93, groups = var_68, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_91, weight = model_2_m_0_cv1_conv_weight_to_fp16, x = var_83_cast_fp16_1)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<fp16, [1, 16, 64, 96]> input_15_cast_fp16 = silu(x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_100 = const()[name = tensor<string, []>("op_100"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_102 = const()[name = tensor<string, []>("op_102"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_2_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17600)))];
            tensor<fp16, [16]> model_2_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22272)))];
            tensor<fp16, [1, 16, 64, 96]> input_17_cast_fp16 = conv(bias = model_2_m_0_cv2_conv_bias_to_fp16, dilations = var_102, groups = var_68, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_100, weight = model_2_m_0_cv2_conv_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, [1, 16, 64, 96]> var_105_cast_fp16 = silu(x = input_17_cast_fp16)[name = tensor<string, []>("op_105_cast_fp16")];
            tensor<fp16, [1, 16, 64, 96]> var_106_cast_fp16 = add(x = var_83_cast_fp16_1, y = var_105_cast_fp16)[name = tensor<string, []>("op_106_cast_fp16")];
            tensor<bool, []> input_19_interleave_0 = const()[name = tensor<string, []>("input_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 48, 64, 96]> input_19_cast_fp16 = concat(axis = var_68, interleave = input_19_interleave_0, values = (var_83_cast_fp16_0, var_83_cast_fp16_1, var_106_cast_fp16))[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_112 = const()[name = tensor<string, []>("op_112"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_114 = const()[name = tensor<string, []>("op_114"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 48, 1, 1]> model_2_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_2_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22400)))];
            tensor<fp16, [32]> model_2_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_2_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25536)))];
            tensor<fp16, [1, 32, 64, 96]> input_21_cast_fp16 = conv(bias = model_2_cv2_conv_bias_to_fp16, dilations = var_114, groups = var_68, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_112, weight = model_2_cv2_conv_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<fp16, [1, 32, 64, 96]> input_23_cast_fp16 = silu(x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, []> var_119 = const()[name = tensor<string, []>("op_119"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_126 = const()[name = tensor<string, []>("op_126"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_128 = const()[name = tensor<string, []>("op_128"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 32, 3, 3]> model_3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_3_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25664)))];
            tensor<fp16, [64]> model_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_3_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62592)))];
            tensor<fp16, [1, 64, 32, 48]> input_25_cast_fp16 = conv(bias = model_3_conv_bias_to_fp16, dilations = var_128, groups = var_119, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = var_126, weight = model_3_conv_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_27_cast_fp16 = silu(x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, []> var_136 = const()[name = tensor<string, []>("op_136"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_146 = const()[name = tensor<string, []>("op_146"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_148 = const()[name = tensor<string, []>("op_148"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_4_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62784)))];
            tensor<fp16, [64]> model_4_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71040)))];
            tensor<fp16, [1, 64, 32, 48]> input_29_cast_fp16 = conv(bias = model_4_cv1_conv_bias_to_fp16, dilations = var_148, groups = var_136, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_146, weight = model_4_cv1_conv_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> var_151_cast_fp16 = silu(x = input_29_cast_fp16)[name = tensor<string, []>("op_151_cast_fp16")];
            tensor<int32, [2]> var_152 = const()[name = tensor<string, []>("op_152"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_153_axis_0 = const()[name = tensor<string, []>("op_153_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 32, 48]> var_153_cast_fp16_0, tensor<fp16, [1, 32, 32, 48]> var_153_cast_fp16_1 = split(axis = var_153_axis_0, split_sizes = var_152, x = var_151_cast_fp16)[name = tensor<string, []>("op_153_cast_fp16")];
            tensor<int32, [2]> var_161 = const()[name = tensor<string, []>("op_161"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_163 = const()[name = tensor<string, []>("op_163"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71232)))];
            tensor<fp16, [32]> model_4_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89728)))];
            tensor<fp16, [1, 32, 32, 48]> input_33_cast_fp16 = conv(bias = model_4_m_0_cv1_conv_bias_to_fp16, dilations = var_163, groups = var_136, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_161, weight = model_4_m_0_cv1_conv_weight_to_fp16, x = var_153_cast_fp16_1)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> input_35_cast_fp16 = silu(x = input_33_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_170 = const()[name = tensor<string, []>("op_170"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_172 = const()[name = tensor<string, []>("op_172"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89856)))];
            tensor<fp16, [32]> model_4_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108352)))];
            tensor<fp16, [1, 32, 32, 48]> input_37_cast_fp16 = conv(bias = model_4_m_0_cv2_conv_bias_to_fp16, dilations = var_172, groups = var_136, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_170, weight = model_4_m_0_cv2_conv_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> var_175_cast_fp16 = silu(x = input_37_cast_fp16)[name = tensor<string, []>("op_175_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> input_39_cast_fp16 = add(x = var_153_cast_fp16_1, y = var_175_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_182 = const()[name = tensor<string, []>("op_182"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_184 = const()[name = tensor<string, []>("op_184"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108480)))];
            tensor<fp16, [32]> model_4_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126976)))];
            tensor<fp16, [1, 32, 32, 48]> input_41_cast_fp16 = conv(bias = model_4_m_1_cv1_conv_bias_to_fp16, dilations = var_184, groups = var_136, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_182, weight = model_4_m_1_cv1_conv_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> input_43_cast_fp16 = silu(x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_191 = const()[name = tensor<string, []>("op_191"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_193 = const()[name = tensor<string, []>("op_193"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_4_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127104)))];
            tensor<fp16, [32]> model_4_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145600)))];
            tensor<fp16, [1, 32, 32, 48]> input_45_cast_fp16 = conv(bias = model_4_m_1_cv2_conv_bias_to_fp16, dilations = var_193, groups = var_136, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = var_191, weight = model_4_m_1_cv2_conv_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> var_196_cast_fp16 = silu(x = input_45_cast_fp16)[name = tensor<string, []>("op_196_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> var_197_cast_fp16 = add(x = input_39_cast_fp16, y = var_196_cast_fp16)[name = tensor<string, []>("op_197_cast_fp16")];
            tensor<bool, []> input_47_interleave_0 = const()[name = tensor<string, []>("input_47_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 32, 48]> input_47_cast_fp16 = concat(axis = var_136, interleave = input_47_interleave_0, values = (var_153_cast_fp16_0, var_153_cast_fp16_1, input_39_cast_fp16, var_197_cast_fp16))[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, [2]> var_203 = const()[name = tensor<string, []>("op_203"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_205 = const()[name = tensor<string, []>("op_205"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 128, 1, 1]> model_4_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_4_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145728)))];
            tensor<fp16, [64]> model_4_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_4_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162176)))];
            tensor<fp16, [1, 64, 32, 48]> input_49_cast_fp16 = conv(bias = model_4_cv2_conv_bias_to_fp16, dilations = var_205, groups = var_136, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_203, weight = model_4_cv2_conv_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_51_cast_fp16 = silu(x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, []> var_210 = const()[name = tensor<string, []>("op_210"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_217 = const()[name = tensor<string, []>("op_217"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_219 = const()[name = tensor<string, []>("op_219"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 64, 3, 3]> model_5_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_5_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162368)))];
            tensor<fp16, [128]> model_5_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_5_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(309888)))];
            tensor<fp16, [1, 128, 16, 24]> input_53_cast_fp16 = conv(bias = model_5_conv_bias_to_fp16, dilations = var_219, groups = var_210, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = var_217, weight = model_5_conv_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> input_55_cast_fp16 = silu(x = input_53_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, []> var_227 = const()[name = tensor<string, []>("op_227"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_237 = const()[name = tensor<string, []>("op_237"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_239 = const()[name = tensor<string, []>("op_239"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 1, 1]> model_6_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(310208)))];
            tensor<fp16, [128]> model_6_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343040)))];
            tensor<fp16, [1, 128, 16, 24]> input_57_cast_fp16 = conv(bias = model_6_cv1_conv_bias_to_fp16, dilations = var_239, groups = var_227, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_237, weight = model_6_cv1_conv_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> var_242_cast_fp16 = silu(x = input_57_cast_fp16)[name = tensor<string, []>("op_242_cast_fp16")];
            tensor<int32, [2]> var_243 = const()[name = tensor<string, []>("op_243"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_244_axis_0 = const()[name = tensor<string, []>("op_244_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 16, 24]> var_244_cast_fp16_0, tensor<fp16, [1, 64, 16, 24]> var_244_cast_fp16_1 = split(axis = var_244_axis_0, split_sizes = var_243, x = var_242_cast_fp16)[name = tensor<string, []>("op_244_cast_fp16")];
            tensor<int32, [2]> var_252 = const()[name = tensor<string, []>("op_252"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_254 = const()[name = tensor<string, []>("op_254"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343360)))];
            tensor<fp16, [64]> model_6_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417152)))];
            tensor<fp16, [1, 64, 16, 24]> input_61_cast_fp16 = conv(bias = model_6_m_0_cv1_conv_bias_to_fp16, dilations = var_254, groups = var_227, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = var_252, weight = model_6_m_0_cv1_conv_weight_to_fp16, x = var_244_cast_fp16_1)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_63_cast_fp16 = silu(x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_261 = const()[name = tensor<string, []>("op_261"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_263 = const()[name = tensor<string, []>("op_263"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417344)))];
            tensor<fp16, [64]> model_6_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491136)))];
            tensor<fp16, [1, 64, 16, 24]> input_65_cast_fp16 = conv(bias = model_6_m_0_cv2_conv_bias_to_fp16, dilations = var_263, groups = var_227, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_261, weight = model_6_m_0_cv2_conv_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> var_266_cast_fp16 = silu(x = input_65_cast_fp16)[name = tensor<string, []>("op_266_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_67_cast_fp16 = add(x = var_244_cast_fp16_1, y = var_266_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<int32, [2]> var_273 = const()[name = tensor<string, []>("op_273"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_275 = const()[name = tensor<string, []>("op_275"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491328)))];
            tensor<fp16, [64]> model_6_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565120)))];
            tensor<fp16, [1, 64, 16, 24]> input_69_cast_fp16 = conv(bias = model_6_m_1_cv1_conv_bias_to_fp16, dilations = var_275, groups = var_227, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_273, weight = model_6_m_1_cv1_conv_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_71_cast_fp16 = silu(x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_282 = const()[name = tensor<string, []>("op_282"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_284 = const()[name = tensor<string, []>("op_284"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_6_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565312)))];
            tensor<fp16, [64]> model_6_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639104)))];
            tensor<fp16, [1, 64, 16, 24]> input_73_cast_fp16 = conv(bias = model_6_m_1_cv2_conv_bias_to_fp16, dilations = var_284, groups = var_227, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_282, weight = model_6_m_1_cv2_conv_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> var_287_cast_fp16 = silu(x = input_73_cast_fp16)[name = tensor<string, []>("op_287_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> var_288_cast_fp16 = add(x = input_67_cast_fp16, y = var_287_cast_fp16)[name = tensor<string, []>("op_288_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 16, 24]> input_75_cast_fp16 = concat(axis = var_227, interleave = input_75_interleave_0, values = (var_244_cast_fp16_0, var_244_cast_fp16_1, input_67_cast_fp16, var_288_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_294 = const()[name = tensor<string, []>("op_294"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_296 = const()[name = tensor<string, []>("op_296"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_6_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_6_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639296)))];
            tensor<fp16, [128]> model_6_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_6_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(704896)))];
            tensor<fp16, [1, 128, 16, 24]> input_77_cast_fp16 = conv(bias = model_6_cv2_conv_bias_to_fp16, dilations = var_296, groups = var_227, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_294, weight = model_6_cv2_conv_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> input_79_cast_fp16 = silu(x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, []> var_301 = const()[name = tensor<string, []>("op_301"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_308 = const()[name = tensor<string, []>("op_308"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> model_7_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_7_conv_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(705216)))];
            tensor<fp16, [256]> model_7_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_7_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295104)))];
            tensor<fp16, [1, 256, 8, 12]> input_81_cast_fp16 = conv(bias = model_7_conv_bias_to_fp16, dilations = var_310, groups = var_301, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = var_308, weight = model_7_conv_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<fp16, [1, 256, 8, 12]> input_83_cast_fp16 = silu(x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, []> var_318 = const()[name = tensor<string, []>("op_318"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_326 = const()[name = tensor<string, []>("op_326"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_328 = const()[name = tensor<string, []>("op_328"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> model_8_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295680)))];
            tensor<fp16, [256]> model_8_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1426816)))];
            tensor<fp16, [1, 256, 8, 12]> input_85_cast_fp16 = conv(bias = model_8_cv1_conv_bias_to_fp16, dilations = var_328, groups = var_318, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_326, weight = model_8_cv1_conv_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<fp16, [1, 256, 8, 12]> var_331_cast_fp16 = silu(x = input_85_cast_fp16)[name = tensor<string, []>("op_331_cast_fp16")];
            tensor<int32, [2]> var_332 = const()[name = tensor<string, []>("op_332"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_333_axis_0 = const()[name = tensor<string, []>("op_333_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 8, 12]> var_333_cast_fp16_0, tensor<fp16, [1, 128, 8, 12]> var_333_cast_fp16_1 = split(axis = var_333_axis_0, split_sizes = var_332, x = var_331_cast_fp16)[name = tensor<string, []>("op_333_cast_fp16")];
            tensor<int32, [2]> var_341 = const()[name = tensor<string, []>("op_341"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_343 = const()[name = tensor<string, []>("op_343"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1427392)))];
            tensor<fp16, [128]> model_8_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722368)))];
            tensor<fp16, [1, 128, 8, 12]> input_89_cast_fp16 = conv(bias = model_8_m_0_cv1_conv_bias_to_fp16, dilations = var_343, groups = var_318, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = var_341, weight = model_8_m_0_cv1_conv_weight_to_fp16, x = var_333_cast_fp16_1)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> input_91_cast_fp16 = silu(x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_350 = const()[name = tensor<string, []>("op_350"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_352 = const()[name = tensor<string, []>("op_352"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_8_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722688)))];
            tensor<fp16, [128]> model_8_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017664)))];
            tensor<fp16, [1, 128, 8, 12]> input_93_cast_fp16 = conv(bias = model_8_m_0_cv2_conv_bias_to_fp16, dilations = var_352, groups = var_318, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = var_350, weight = model_8_m_0_cv2_conv_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> var_355_cast_fp16 = silu(x = input_93_cast_fp16)[name = tensor<string, []>("op_355_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> var_356_cast_fp16 = add(x = var_333_cast_fp16_1, y = var_355_cast_fp16)[name = tensor<string, []>("op_356_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 8, 12]> input_95_cast_fp16 = concat(axis = var_318, interleave = input_95_interleave_0, values = (var_333_cast_fp16_0, var_333_cast_fp16_1, var_356_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_362 = const()[name = tensor<string, []>("op_362"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_364 = const()[name = tensor<string, []>("op_364"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_8_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_8_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017984)))];
            tensor<fp16, [256]> model_8_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_8_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2214656)))];
            tensor<fp16, [1, 256, 8, 12]> input_97_cast_fp16 = conv(bias = model_8_cv2_conv_bias_to_fp16, dilations = var_364, groups = var_318, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_362, weight = model_8_cv2_conv_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<fp16, [1, 256, 8, 12]> input_99_cast_fp16 = silu(x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, []> var_373 = const()[name = tensor<string, []>("op_373"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_379 = const()[name = tensor<string, []>("op_379"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_381 = const()[name = tensor<string, []>("op_381"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_9_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_9_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2215232)))];
            tensor<fp16, [128]> model_9_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_9_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2280832)))];
            tensor<fp16, [1, 128, 8, 12]> input_101_cast_fp16 = conv(bias = model_9_cv1_conv_bias_to_fp16, dilations = var_381, groups = var_373, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = var_379, weight = model_9_cv1_conv_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> input_103_cast_fp16 = silu(x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_385 = const()[name = tensor<string, []>("op_385"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_386 = const()[name = tensor<string, []>("op_386"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_105_ceil_mode_0 = const()[name = tensor<string, []>("input_105_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 12]> input_105_cast_fp16 = max_pool(ceil_mode = input_105_ceil_mode_0, kernel_sizes = var_385, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_386, x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_390 = const()[name = tensor<string, []>("op_390"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_391 = const()[name = tensor<string, []>("op_391"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_107_ceil_mode_0 = const()[name = tensor<string, []>("input_107_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 12]> input_107_cast_fp16 = max_pool(ceil_mode = input_107_ceil_mode_0, kernel_sizes = var_390, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_391, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<int32, [2]> var_395 = const()[name = tensor<string, []>("op_395"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_396 = const()[name = tensor<string, []>("op_396"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_399_pad_type_0 = const()[name = tensor<string, []>("op_399_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_399_pad_0 = const()[name = tensor<string, []>("op_399_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> var_399_ceil_mode_0 = const()[name = tensor<string, []>("op_399_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 12]> var_399_cast_fp16 = max_pool(ceil_mode = var_399_ceil_mode_0, kernel_sizes = var_395, pad = var_399_pad_0, pad_type = var_399_pad_type_0, strides = var_396, x = input_107_cast_fp16)[name = tensor<string, []>("op_399_cast_fp16")];
            tensor<bool, []> input_109_interleave_0 = const()[name = tensor<string, []>("input_109_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 8, 12]> input_109_cast_fp16 = concat(axis = var_373, interleave = input_109_interleave_0, values = (input_103_cast_fp16, input_105_cast_fp16, input_107_cast_fp16, var_399_cast_fp16))[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_405 = const()[name = tensor<string, []>("op_405"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_407 = const()[name = tensor<string, []>("op_407"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> model_9_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_9_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2281152)))];
            tensor<fp16, [256]> model_9_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_9_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543360)))];
            tensor<fp16, [1, 256, 8, 12]> input_111_cast_fp16 = conv(bias = model_9_cv2_conv_bias_to_fp16, dilations = var_407, groups = var_373, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_405, weight = model_9_cv2_conv_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<fp16, [1, 256, 8, 12]> input_113_cast_fp16 = silu(x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp32, []> var_414_scale_factor_height_0 = const()[name = tensor<string, []>("op_414_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_414_scale_factor_width_0 = const()[name = tensor<string, []>("op_414_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 16, 24]> var_414_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_414_scale_factor_height_0, scale_factor_width = var_414_scale_factor_width_0, x = input_113_cast_fp16)[name = tensor<string, []>("op_414_cast_fp16")];
            tensor<int32, []> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 16, 24]> input_115_cast_fp16 = concat(axis = var_415, interleave = input_115_interleave_0, values = (var_414_cast_fp16, input_79_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, []> var_422 = const()[name = tensor<string, []>("op_422"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_430 = const()[name = tensor<string, []>("op_430"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_432 = const()[name = tensor<string, []>("op_432"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 384, 1, 1]> model_12_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543936)))];
            tensor<fp16, [128]> model_12_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642304)))];
            tensor<fp16, [1, 128, 16, 24]> input_117_cast_fp16 = conv(bias = model_12_cv1_conv_bias_to_fp16, dilations = var_432, groups = var_422, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_430, weight = model_12_cv1_conv_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> var_435_cast_fp16 = silu(x = input_117_cast_fp16)[name = tensor<string, []>("op_435_cast_fp16")];
            tensor<int32, [2]> var_436 = const()[name = tensor<string, []>("op_436"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_437_axis_0 = const()[name = tensor<string, []>("op_437_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 16, 24]> var_437_cast_fp16_0, tensor<fp16, [1, 64, 16, 24]> var_437_cast_fp16_1 = split(axis = var_437_axis_0, split_sizes = var_436, x = var_435_cast_fp16)[name = tensor<string, []>("op_437_cast_fp16")];
            tensor<int32, [2]> var_445 = const()[name = tensor<string, []>("op_445"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_447 = const()[name = tensor<string, []>("op_447"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_12_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642624)))];
            tensor<fp16, [64]> model_12_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716416)))];
            tensor<fp16, [1, 64, 16, 24]> input_121_cast_fp16 = conv(bias = model_12_m_0_cv1_conv_bias_to_fp16, dilations = var_447, groups = var_422, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = var_445, weight = model_12_m_0_cv1_conv_weight_to_fp16, x = var_437_cast_fp16_1)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_123_cast_fp16 = silu(x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_454 = const()[name = tensor<string, []>("op_454"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_456 = const()[name = tensor<string, []>("op_456"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_12_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716608)))];
            tensor<fp16, [64]> model_12_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790400)))];
            tensor<fp16, [1, 64, 16, 24]> input_125_cast_fp16 = conv(bias = model_12_m_0_cv2_conv_bias_to_fp16, dilations = var_456, groups = var_422, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_454, weight = model_12_m_0_cv2_conv_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> var_459_cast_fp16 = silu(x = input_125_cast_fp16)[name = tensor<string, []>("op_459_cast_fp16")];
            tensor<bool, []> input_127_interleave_0 = const()[name = tensor<string, []>("input_127_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 16, 24]> input_127_cast_fp16 = concat(axis = var_422, interleave = input_127_interleave_0, values = (var_437_cast_fp16_0, var_437_cast_fp16_1, var_459_cast_fp16))[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_465 = const()[name = tensor<string, []>("op_465"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_467 = const()[name = tensor<string, []>("op_467"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_12_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_12_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790592)))];
            tensor<fp16, [128]> model_12_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_12_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2839808)))];
            tensor<fp16, [1, 128, 16, 24]> input_129_cast_fp16 = conv(bias = model_12_cv2_conv_bias_to_fp16, dilations = var_467, groups = var_422, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_465, weight = model_12_cv2_conv_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> input_131_cast_fp16 = silu(x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp32, []> var_474_scale_factor_height_0 = const()[name = tensor<string, []>("op_474_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_474_scale_factor_width_0 = const()[name = tensor<string, []>("op_474_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 128, 32, 48]> var_474_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_474_scale_factor_height_0, scale_factor_width = var_474_scale_factor_width_0, x = input_131_cast_fp16)[name = tensor<string, []>("op_474_cast_fp16")];
            tensor<int32, []> var_475 = const()[name = tensor<string, []>("op_475"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 32, 48]> input_133_cast_fp16 = concat(axis = var_475, interleave = input_133_interleave_0, values = (var_474_cast_fp16, input_51_cast_fp16))[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<int32, []> var_482 = const()[name = tensor<string, []>("op_482"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_490 = const()[name = tensor<string, []>("op_490"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_492 = const()[name = tensor<string, []>("op_492"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 192, 1, 1]> model_15_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2840128)))];
            tensor<fp16, [64]> model_15_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864768)))];
            tensor<fp16, [1, 64, 32, 48]> input_135_cast_fp16 = conv(bias = model_15_cv1_conv_bias_to_fp16, dilations = var_492, groups = var_482, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = var_490, weight = model_15_cv1_conv_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> var_495_cast_fp16 = silu(x = input_135_cast_fp16)[name = tensor<string, []>("op_495_cast_fp16")];
            tensor<int32, [2]> var_496 = const()[name = tensor<string, []>("op_496"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_497_axis_0 = const()[name = tensor<string, []>("op_497_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 32, 48]> var_497_cast_fp16_0, tensor<fp16, [1, 32, 32, 48]> var_497_cast_fp16_1 = split(axis = var_497_axis_0, split_sizes = var_496, x = var_495_cast_fp16)[name = tensor<string, []>("op_497_cast_fp16")];
            tensor<int32, [2]> var_505 = const()[name = tensor<string, []>("op_505"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_507 = const()[name = tensor<string, []>("op_507"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_15_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864960)))];
            tensor<fp16, [32]> model_15_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883456)))];
            tensor<fp16, [1, 32, 32, 48]> input_139_cast_fp16 = conv(bias = model_15_m_0_cv1_conv_bias_to_fp16, dilations = var_507, groups = var_482, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = var_505, weight = model_15_m_0_cv1_conv_weight_to_fp16, x = var_497_cast_fp16_1)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> input_141_cast_fp16 = silu(x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<int32, [2]> var_514 = const()[name = tensor<string, []>("op_514"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_516 = const()[name = tensor<string, []>("op_516"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_15_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883584)))];
            tensor<fp16, [32]> model_15_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902080)))];
            tensor<fp16, [1, 32, 32, 48]> input_143_cast_fp16 = conv(bias = model_15_m_0_cv2_conv_bias_to_fp16, dilations = var_516, groups = var_482, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_514, weight = model_15_m_0_cv2_conv_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<fp16, [1, 32, 32, 48]> var_519_cast_fp16 = silu(x = input_143_cast_fp16)[name = tensor<string, []>("op_519_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 96, 32, 48]> input_145_cast_fp16 = concat(axis = var_482, interleave = input_145_interleave_0, values = (var_497_cast_fp16_0, var_497_cast_fp16_1, var_519_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<int32, [2]> var_525 = const()[name = tensor<string, []>("op_525"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_527 = const()[name = tensor<string, []>("op_527"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_147_pad_type_0 = const()[name = tensor<string, []>("input_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_147_pad_0 = const()[name = tensor<string, []>("input_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 96, 1, 1]> model_15_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_15_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902208)))];
            tensor<fp16, [64]> model_15_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_15_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914560)))];
            tensor<fp16, [1, 64, 32, 48]> input_147_cast_fp16 = conv(bias = model_15_cv2_conv_bias_to_fp16, dilations = var_527, groups = var_482, pad = input_147_pad_0, pad_type = input_147_pad_type_0, strides = var_525, weight = model_15_cv2_conv_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_149_cast_fp16 = silu(x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<int32, []> var_532 = const()[name = tensor<string, []>("op_532"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_539 = const()[name = tensor<string, []>("op_539"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_541 = const()[name = tensor<string, []>("op_541"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_16_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_16_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914752)))];
            tensor<fp16, [64]> model_16_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_16_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988544)))];
            tensor<fp16, [1, 64, 16, 24]> input_151_cast_fp16 = conv(bias = model_16_conv_bias_to_fp16, dilations = var_541, groups = var_532, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_539, weight = model_16_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> var_544_cast_fp16 = silu(x = input_151_cast_fp16)[name = tensor<string, []>("op_544_cast_fp16")];
            tensor<int32, []> var_545 = const()[name = tensor<string, []>("op_545"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_153_interleave_0 = const()[name = tensor<string, []>("input_153_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 16, 24]> input_153_cast_fp16 = concat(axis = var_545, interleave = input_153_interleave_0, values = (var_544_cast_fp16, input_131_cast_fp16))[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, []> var_552 = const()[name = tensor<string, []>("op_552"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_560 = const()[name = tensor<string, []>("op_560"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_562 = const()[name = tensor<string, []>("op_562"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_18_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988736)))];
            tensor<fp16, [128]> model_18_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3037952)))];
            tensor<fp16, [1, 128, 16, 24]> input_155_cast_fp16 = conv(bias = model_18_cv1_conv_bias_to_fp16, dilations = var_562, groups = var_552, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_560, weight = model_18_cv1_conv_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> var_565_cast_fp16 = silu(x = input_155_cast_fp16)[name = tensor<string, []>("op_565_cast_fp16")];
            tensor<int32, [2]> var_566 = const()[name = tensor<string, []>("op_566"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_567_axis_0 = const()[name = tensor<string, []>("op_567_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 16, 24]> var_567_cast_fp16_0, tensor<fp16, [1, 64, 16, 24]> var_567_cast_fp16_1 = split(axis = var_567_axis_0, split_sizes = var_566, x = var_565_cast_fp16)[name = tensor<string, []>("op_567_cast_fp16")];
            tensor<int32, [2]> var_575 = const()[name = tensor<string, []>("op_575"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_577 = const()[name = tensor<string, []>("op_577"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_18_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3038272)))];
            tensor<fp16, [64]> model_18_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112064)))];
            tensor<fp16, [1, 64, 16, 24]> input_159_cast_fp16 = conv(bias = model_18_m_0_cv1_conv_bias_to_fp16, dilations = var_577, groups = var_552, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_575, weight = model_18_m_0_cv1_conv_weight_to_fp16, x = var_567_cast_fp16_1)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_161_cast_fp16 = silu(x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<int32, [2]> var_584 = const()[name = tensor<string, []>("op_584"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_586 = const()[name = tensor<string, []>("op_586"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_18_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112256)))];
            tensor<fp16, [64]> model_18_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186048)))];
            tensor<fp16, [1, 64, 16, 24]> input_163_cast_fp16 = conv(bias = model_18_m_0_cv2_conv_bias_to_fp16, dilations = var_586, groups = var_552, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_584, weight = model_18_m_0_cv2_conv_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> var_589_cast_fp16 = silu(x = input_163_cast_fp16)[name = tensor<string, []>("op_589_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 16, 24]> input_165_cast_fp16 = concat(axis = var_552, interleave = input_165_interleave_0, values = (var_567_cast_fp16_0, var_567_cast_fp16_1, var_589_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<int32, [2]> var_595 = const()[name = tensor<string, []>("op_595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_597 = const()[name = tensor<string, []>("op_597"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_18_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_18_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186240)))];
            tensor<fp16, [128]> model_18_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_18_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235456)))];
            tensor<fp16, [1, 128, 16, 24]> input_167_cast_fp16 = conv(bias = model_18_cv2_conv_bias_to_fp16, dilations = var_597, groups = var_552, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_595, weight = model_18_cv2_conv_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, [1, 128, 16, 24]> input_169_cast_fp16 = silu(x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<int32, []> var_602 = const()[name = tensor<string, []>("op_602"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_609 = const()[name = tensor<string, []>("op_609"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_611 = const()[name = tensor<string, []>("op_611"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_19_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_19_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235776)))];
            tensor<fp16, [128]> model_19_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_19_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3530752)))];
            tensor<fp16, [1, 128, 8, 12]> input_171_cast_fp16 = conv(bias = model_19_conv_bias_to_fp16, dilations = var_611, groups = var_602, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_609, weight = model_19_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> var_614_cast_fp16 = silu(x = input_171_cast_fp16)[name = tensor<string, []>("op_614_cast_fp16")];
            tensor<int32, []> var_615 = const()[name = tensor<string, []>("op_615"), val = tensor<int32, []>(1)];
            tensor<bool, []> input_173_interleave_0 = const()[name = tensor<string, []>("input_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 8, 12]> input_173_cast_fp16 = concat(axis = var_615, interleave = input_173_interleave_0, values = (var_614_cast_fp16, input_113_cast_fp16))[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<int32, []> var_622 = const()[name = tensor<string, []>("op_622"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_630 = const()[name = tensor<string, []>("op_630"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_632 = const()[name = tensor<string, []>("op_632"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_21_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3531072)))];
            tensor<fp16, [256]> model_21_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3727744)))];
            tensor<fp16, [1, 256, 8, 12]> input_175_cast_fp16 = conv(bias = model_21_cv1_conv_bias_to_fp16, dilations = var_632, groups = var_622, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = var_630, weight = model_21_cv1_conv_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<fp16, [1, 256, 8, 12]> var_635_cast_fp16 = silu(x = input_175_cast_fp16)[name = tensor<string, []>("op_635_cast_fp16")];
            tensor<int32, [2]> var_636 = const()[name = tensor<string, []>("op_636"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_637_axis_0 = const()[name = tensor<string, []>("op_637_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 8, 12]> var_637_cast_fp16_0, tensor<fp16, [1, 128, 8, 12]> var_637_cast_fp16_1 = split(axis = var_637_axis_0, split_sizes = var_636, x = var_635_cast_fp16)[name = tensor<string, []>("op_637_cast_fp16")];
            tensor<int32, [2]> var_645 = const()[name = tensor<string, []>("op_645"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_647 = const()[name = tensor<string, []>("op_647"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_21_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3728320)))];
            tensor<fp16, [128]> model_21_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023296)))];
            tensor<fp16, [1, 128, 8, 12]> input_179_cast_fp16 = conv(bias = model_21_m_0_cv1_conv_bias_to_fp16, dilations = var_647, groups = var_622, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_645, weight = model_21_m_0_cv1_conv_weight_to_fp16, x = var_637_cast_fp16_1)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> input_181_cast_fp16 = silu(x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<int32, [2]> var_654 = const()[name = tensor<string, []>("op_654"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_656 = const()[name = tensor<string, []>("op_656"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_183_pad_type_0 = const()[name = tensor<string, []>("input_183_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_183_pad_0 = const()[name = tensor<string, []>("input_183_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_21_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023616)))];
            tensor<fp16, [128]> model_21_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318592)))];
            tensor<fp16, [1, 128, 8, 12]> input_183_cast_fp16 = conv(bias = model_21_m_0_cv2_conv_bias_to_fp16, dilations = var_656, groups = var_622, pad = input_183_pad_0, pad_type = input_183_pad_type_0, strides = var_654, weight = model_21_m_0_cv2_conv_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<fp16, [1, 128, 8, 12]> var_659_cast_fp16 = silu(x = input_183_cast_fp16)[name = tensor<string, []>("op_659_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 8, 12]> input_185_cast_fp16 = concat(axis = var_622, interleave = input_185_interleave_0, values = (var_637_cast_fp16_0, var_637_cast_fp16_1, var_659_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<int32, [2]> var_665 = const()[name = tensor<string, []>("op_665"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_667 = const()[name = tensor<string, []>("op_667"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_21_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_21_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318912)))];
            tensor<fp16, [256]> model_21_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_21_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4515584)))];
            tensor<fp16, [1, 256, 8, 12]> input_187_cast_fp16 = conv(bias = model_21_cv2_conv_bias_to_fp16, dilations = var_667, groups = var_622, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_665, weight = model_21_cv2_conv_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<fp16, [1, 256, 8, 12]> input_205_cast_fp16 = silu(x = input_187_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<int32, []> var_679 = const()[name = tensor<string, []>("op_679"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_681 = const()[name = tensor<string, []>("op_681"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_711 = const()[name = tensor<string, []>("op_711"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_713 = const()[name = tensor<string, []>("op_713"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 64, 3, 3]> model_22_cv4_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_0_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4516160)))];
            tensor<fp16, [16]> model_22_cv4_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_0_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4534656)))];
            tensor<fp16, [1, 16, 32, 48]> input_189_cast_fp16 = conv(bias = model_22_cv4_0_0_conv_bias_to_fp16, dilations = var_713, groups = var_681, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_711, weight = model_22_cv4_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<fp16, [1, 16, 32, 48]> input_191_cast_fp16 = silu(x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<int32, [2]> var_720 = const()[name = tensor<string, []>("op_720"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_722 = const()[name = tensor<string, []>("op_722"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_22_cv4_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_0_1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4534784)))];
            tensor<fp16, [16]> model_22_cv4_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_0_1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4539456)))];
            tensor<fp16, [1, 16, 32, 48]> input_193_cast_fp16 = conv(bias = model_22_cv4_0_1_conv_bias_to_fp16, dilations = var_722, groups = var_681, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_720, weight = model_22_cv4_0_1_conv_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, [1, 16, 32, 48]> input_195_cast_fp16 = silu(x = input_193_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<int32, [2]> var_728 = const()[name = tensor<string, []>("op_728"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_730 = const()[name = tensor<string, []>("op_730"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_732_pad_type_0 = const()[name = tensor<string, []>("op_732_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_732_pad_0 = const()[name = tensor<string, []>("op_732_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_22_cv4_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_0_2_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4539584)))];
            tensor<fp16, [1]> model_22_cv4_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_0_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.e08p-5])];
            tensor<fp16, [1, 1, 32, 48]> var_732_cast_fp16 = conv(bias = model_22_cv4_0_2_bias_to_fp16, dilations = var_730, groups = var_681, pad = var_732_pad_0, pad_type = var_732_pad_type_0, strides = var_728, weight = model_22_cv4_0_2_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_732_cast_fp16")];
            tensor<int32, [3]> var_733 = const()[name = tensor<string, []>("op_733"), val = tensor<int32, [3]>([1, 1, -1])];
            tensor<fp16, [1, 1, 1536]> var_734_cast_fp16 = reshape(shape = var_733, x = var_732_cast_fp16)[name = tensor<string, []>("op_734_cast_fp16")];
            tensor<int32, [2]> var_741 = const()[name = tensor<string, []>("op_741"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_743 = const()[name = tensor<string, []>("op_743"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 128, 3, 3]> model_22_cv4_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_1_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4539712)))];
            tensor<fp16, [16]> model_22_cv4_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_1_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4576640)))];
            tensor<fp16, [1, 16, 16, 24]> input_197_cast_fp16 = conv(bias = model_22_cv4_1_0_conv_bias_to_fp16, dilations = var_743, groups = var_681, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = var_741, weight = model_22_cv4_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, [1, 16, 16, 24]> input_199_cast_fp16 = silu(x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<int32, [2]> var_750 = const()[name = tensor<string, []>("op_750"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_752 = const()[name = tensor<string, []>("op_752"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_22_cv4_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_1_1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4576768)))];
            tensor<fp16, [16]> model_22_cv4_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_1_1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4581440)))];
            tensor<fp16, [1, 16, 16, 24]> input_201_cast_fp16 = conv(bias = model_22_cv4_1_1_conv_bias_to_fp16, dilations = var_752, groups = var_681, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_750, weight = model_22_cv4_1_1_conv_weight_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, [1, 16, 16, 24]> input_203_cast_fp16 = silu(x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<int32, [2]> var_758 = const()[name = tensor<string, []>("op_758"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_760 = const()[name = tensor<string, []>("op_760"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_762_pad_type_0 = const()[name = tensor<string, []>("op_762_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_762_pad_0 = const()[name = tensor<string, []>("op_762_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_22_cv4_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_1_2_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4581568)))];
            tensor<fp16, [1]> model_22_cv4_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_1_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.658p-5])];
            tensor<fp16, [1, 1, 16, 24]> var_762_cast_fp16 = conv(bias = model_22_cv4_1_2_bias_to_fp16, dilations = var_760, groups = var_681, pad = var_762_pad_0, pad_type = var_762_pad_type_0, strides = var_758, weight = model_22_cv4_1_2_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_762_cast_fp16")];
            tensor<int32, [3]> var_763 = const()[name = tensor<string, []>("op_763"), val = tensor<int32, [3]>([1, 1, -1])];
            tensor<fp16, [1, 1, 384]> var_764_cast_fp16 = reshape(shape = var_763, x = var_762_cast_fp16)[name = tensor<string, []>("op_764_cast_fp16")];
            tensor<int32, [2]> var_771 = const()[name = tensor<string, []>("op_771"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_773 = const()[name = tensor<string, []>("op_773"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_207_pad_type_0 = const()[name = tensor<string, []>("input_207_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_207_pad_0 = const()[name = tensor<string, []>("input_207_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 256, 3, 3]> model_22_cv4_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_2_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4581696)))];
            tensor<fp16, [16]> model_22_cv4_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_2_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4655488)))];
            tensor<fp16, [1, 16, 8, 12]> input_207_cast_fp16 = conv(bias = model_22_cv4_2_0_conv_bias_to_fp16, dilations = var_773, groups = var_681, pad = input_207_pad_0, pad_type = input_207_pad_type_0, strides = var_771, weight = model_22_cv4_2_0_conv_weight_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<fp16, [1, 16, 8, 12]> input_209_cast_fp16 = silu(x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<int32, [2]> var_780 = const()[name = tensor<string, []>("op_780"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_782 = const()[name = tensor<string, []>("op_782"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_211_pad_type_0 = const()[name = tensor<string, []>("input_211_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_211_pad_0 = const()[name = tensor<string, []>("input_211_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_22_cv4_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_2_1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4655616)))];
            tensor<fp16, [16]> model_22_cv4_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_2_1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4660288)))];
            tensor<fp16, [1, 16, 8, 12]> input_211_cast_fp16 = conv(bias = model_22_cv4_2_1_conv_bias_to_fp16, dilations = var_782, groups = var_681, pad = input_211_pad_0, pad_type = input_211_pad_type_0, strides = var_780, weight = model_22_cv4_2_1_conv_weight_to_fp16, x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<fp16, [1, 16, 8, 12]> input_213_cast_fp16 = silu(x = input_211_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<int32, [2]> var_788 = const()[name = tensor<string, []>("op_788"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_790 = const()[name = tensor<string, []>("op_790"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_792_pad_type_0 = const()[name = tensor<string, []>("op_792_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_792_pad_0 = const()[name = tensor<string, []>("op_792_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_22_cv4_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_2_2_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4660416)))];
            tensor<fp16, [1]> model_22_cv4_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv4_2_2_bias_to_fp16"), val = tensor<fp16, [1]>([-0x1.97p-2])];
            tensor<fp16, [1, 1, 8, 12]> var_792_cast_fp16 = conv(bias = model_22_cv4_2_2_bias_to_fp16, dilations = var_790, groups = var_681, pad = var_792_pad_0, pad_type = var_792_pad_type_0, strides = var_788, weight = model_22_cv4_2_2_weight_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("op_792_cast_fp16")];
            tensor<int32, [3]> var_793 = const()[name = tensor<string, []>("op_793"), val = tensor<int32, [3]>([1, 1, -1])];
            tensor<fp16, [1, 1, 96]> var_794_cast_fp16 = reshape(shape = var_793, x = var_792_cast_fp16)[name = tensor<string, []>("op_794_cast_fp16")];
            tensor<bool, []> angle_interleave_0 = const()[name = tensor<string, []>("angle_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 2016]> angle_cast_fp16 = concat(axis = var_679, interleave = angle_interleave_0, values = (var_734_cast_fp16, var_764_cast_fp16, var_794_cast_fp16))[name = tensor<string, []>("angle_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> var_797_cast_fp16 = sigmoid(x = angle_cast_fp16)[name = tensor<string, []>("op_797_cast_fp16")];
            tensor<fp16, []> var_798_to_fp16 = const()[name = tensor<string, []>("op_798_to_fp16"), val = tensor<fp16, []>(0x1p-2)];
            tensor<fp16, [1, 1, 2016]> var_799_cast_fp16 = sub(x = var_797_cast_fp16, y = var_798_to_fp16)[name = tensor<string, []>("op_799_cast_fp16")];
            tensor<fp16, []> var_800_to_fp16 = const()[name = tensor<string, []>("op_800_to_fp16"), val = tensor<fp16, []>(0x1.92p+1)];
            tensor<fp16, [1, 1, 2016]> pred_angle_cast_fp16 = mul(x = var_799_cast_fp16, y = var_800_to_fp16)[name = tensor<string, []>("pred_angle_cast_fp16")];
            tensor<int32, [2]> var_808 = const()[name = tensor<string, []>("op_808"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_810 = const()[name = tensor<string, []>("op_810"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_215_pad_type_0 = const()[name = tensor<string, []>("input_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_215_pad_0 = const()[name = tensor<string, []>("input_215_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4660544)))];
            tensor<fp16, [64]> model_22_cv2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4734336)))];
            tensor<fp16, [1, 64, 32, 48]> input_215_cast_fp16 = conv(bias = model_22_cv2_0_0_conv_bias_to_fp16, dilations = var_810, groups = var_681, pad = input_215_pad_0, pad_type = input_215_pad_type_0, strides = var_808, weight = model_22_cv2_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_217_cast_fp16 = silu(x = input_215_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<int32, [2]> var_817 = const()[name = tensor<string, []>("op_817"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_819 = const()[name = tensor<string, []>("op_819"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_219_pad_type_0 = const()[name = tensor<string, []>("input_219_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_219_pad_0 = const()[name = tensor<string, []>("input_219_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4734528)))];
            tensor<fp16, [64]> model_22_cv2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4808320)))];
            tensor<fp16, [1, 64, 32, 48]> input_219_cast_fp16 = conv(bias = model_22_cv2_0_1_conv_bias_to_fp16, dilations = var_819, groups = var_681, pad = input_219_pad_0, pad_type = input_219_pad_type_0, strides = var_817, weight = model_22_cv2_0_1_conv_weight_to_fp16, x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_221_cast_fp16 = silu(x = input_219_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<int32, [2]> var_825 = const()[name = tensor<string, []>("op_825"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_827 = const()[name = tensor<string, []>("op_827"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_829_pad_type_0 = const()[name = tensor<string, []>("op_829_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_829_pad_0 = const()[name = tensor<string, []>("op_829_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_22_cv2_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4808512)))];
            tensor<fp16, [64]> model_22_cv2_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_0_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4816768)))];
            tensor<fp16, [1, 64, 32, 48]> var_829_cast_fp16 = conv(bias = model_22_cv2_0_2_bias_to_fp16, dilations = var_827, groups = var_681, pad = var_829_pad_0, pad_type = var_829_pad_type_0, strides = var_825, weight = model_22_cv2_0_2_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("op_829_cast_fp16")];
            tensor<int32, [2]> var_836 = const()[name = tensor<string, []>("op_836"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_838 = const()[name = tensor<string, []>("op_838"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4816960)))];
            tensor<fp16, [64]> model_22_cv3_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4890752)))];
            tensor<fp16, [1, 64, 32, 48]> input_223_cast_fp16 = conv(bias = model_22_cv3_0_0_conv_bias_to_fp16, dilations = var_838, groups = var_681, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = var_836, weight = model_22_cv3_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_225_cast_fp16 = silu(x = input_223_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<int32, [2]> var_845 = const()[name = tensor<string, []>("op_845"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_847 = const()[name = tensor<string, []>("op_847"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_227_pad_type_0 = const()[name = tensor<string, []>("input_227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_227_pad_0 = const()[name = tensor<string, []>("input_227_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4890944)))];
            tensor<fp16, [64]> model_22_cv3_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4964736)))];
            tensor<fp16, [1, 64, 32, 48]> input_227_cast_fp16 = conv(bias = model_22_cv3_0_1_conv_bias_to_fp16, dilations = var_847, groups = var_681, pad = input_227_pad_0, pad_type = input_227_pad_type_0, strides = var_845, weight = model_22_cv3_0_1_conv_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<fp16, [1, 64, 32, 48]> input_229_cast_fp16 = silu(x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<int32, [2]> var_853 = const()[name = tensor<string, []>("op_853"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_855 = const()[name = tensor<string, []>("op_855"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_857_pad_type_0 = const()[name = tensor<string, []>("op_857_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_857_pad_0 = const()[name = tensor<string, []>("op_857_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 64, 1, 1]> model_22_cv3_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_2_weight_to_fp16"), val = tensor<fp16, [8, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4964928)))];
            tensor<fp16, [8]> model_22_cv3_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_0_2_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.298p+3, -0x1.1c8p+3, -0x1.28p+3, -0x1.2acp+3, -0x1.2b8p+3, -0x1.248p+3, -0x1.2c4p+3, -0x1.258p+3])];
            tensor<fp16, [1, 8, 32, 48]> var_857_cast_fp16 = conv(bias = model_22_cv3_0_2_bias_to_fp16, dilations = var_855, groups = var_681, pad = var_857_pad_0, pad_type = var_857_pad_type_0, strides = var_853, weight = model_22_cv3_0_2_weight_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("op_857_cast_fp16")];
            tensor<bool, []> xi_1_interleave_0 = const()[name = tensor<string, []>("xi_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 32, 48]> xi_1_cast_fp16 = concat(axis = var_681, interleave = xi_1_interleave_0, values = (var_829_cast_fp16, var_857_cast_fp16))[name = tensor<string, []>("xi_1_cast_fp16")];
            tensor<int32, [2]> var_866 = const()[name = tensor<string, []>("op_866"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_868 = const()[name = tensor<string, []>("op_868"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_22_cv2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4966016)))];
            tensor<fp16, [64]> model_22_cv2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5113536)))];
            tensor<fp16, [1, 64, 16, 24]> input_231_cast_fp16 = conv(bias = model_22_cv2_1_0_conv_bias_to_fp16, dilations = var_868, groups = var_681, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = var_866, weight = model_22_cv2_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_233_cast_fp16 = silu(x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<int32, [2]> var_875 = const()[name = tensor<string, []>("op_875"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_877 = const()[name = tensor<string, []>("op_877"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5113728)))];
            tensor<fp16, [64]> model_22_cv2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5187520)))];
            tensor<fp16, [1, 64, 16, 24]> input_235_cast_fp16 = conv(bias = model_22_cv2_1_1_conv_bias_to_fp16, dilations = var_877, groups = var_681, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = var_875, weight = model_22_cv2_1_1_conv_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_237_cast_fp16 = silu(x = input_235_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<int32, [2]> var_883 = const()[name = tensor<string, []>("op_883"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_885 = const()[name = tensor<string, []>("op_885"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_887_pad_type_0 = const()[name = tensor<string, []>("op_887_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_887_pad_0 = const()[name = tensor<string, []>("op_887_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_22_cv2_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5187712)))];
            tensor<fp16, [64]> model_22_cv2_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_1_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5195968)))];
            tensor<fp16, [1, 64, 16, 24]> var_887_cast_fp16 = conv(bias = model_22_cv2_1_2_bias_to_fp16, dilations = var_885, groups = var_681, pad = var_887_pad_0, pad_type = var_887_pad_type_0, strides = var_883, weight = model_22_cv2_1_2_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("op_887_cast_fp16")];
            tensor<int32, [2]> var_894 = const()[name = tensor<string, []>("op_894"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_896 = const()[name = tensor<string, []>("op_896"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_239_pad_type_0 = const()[name = tensor<string, []>("input_239_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_239_pad_0 = const()[name = tensor<string, []>("input_239_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_22_cv3_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5196160)))];
            tensor<fp16, [64]> model_22_cv3_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5343680)))];
            tensor<fp16, [1, 64, 16, 24]> input_239_cast_fp16 = conv(bias = model_22_cv3_1_0_conv_bias_to_fp16, dilations = var_896, groups = var_681, pad = input_239_pad_0, pad_type = input_239_pad_type_0, strides = var_894, weight = model_22_cv3_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_239_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_241_cast_fp16 = silu(x = input_239_cast_fp16)[name = tensor<string, []>("input_241_cast_fp16")];
            tensor<int32, [2]> var_903 = const()[name = tensor<string, []>("op_903"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_905 = const()[name = tensor<string, []>("op_905"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_243_pad_type_0 = const()[name = tensor<string, []>("input_243_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_243_pad_0 = const()[name = tensor<string, []>("input_243_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5343872)))];
            tensor<fp16, [64]> model_22_cv3_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5417664)))];
            tensor<fp16, [1, 64, 16, 24]> input_243_cast_fp16 = conv(bias = model_22_cv3_1_1_conv_bias_to_fp16, dilations = var_905, groups = var_681, pad = input_243_pad_0, pad_type = input_243_pad_type_0, strides = var_903, weight = model_22_cv3_1_1_conv_weight_to_fp16, x = input_241_cast_fp16)[name = tensor<string, []>("input_243_cast_fp16")];
            tensor<fp16, [1, 64, 16, 24]> input_245_cast_fp16 = silu(x = input_243_cast_fp16)[name = tensor<string, []>("input_245_cast_fp16")];
            tensor<int32, [2]> var_911 = const()[name = tensor<string, []>("op_911"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_913 = const()[name = tensor<string, []>("op_913"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_915_pad_type_0 = const()[name = tensor<string, []>("op_915_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_915_pad_0 = const()[name = tensor<string, []>("op_915_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 64, 1, 1]> model_22_cv3_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_2_weight_to_fp16"), val = tensor<fp16, [8, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5417856)))];
            tensor<fp16, [8]> model_22_cv3_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_1_2_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.f3p+2, -0x1.f14p+2, -0x1.fdp+2, -0x1.fb4p+2, -0x1.fc4p+2, -0x1.f64p+2, -0x1.004p+3, -0x1.004p+3])];
            tensor<fp16, [1, 8, 16, 24]> var_915_cast_fp16 = conv(bias = model_22_cv3_1_2_bias_to_fp16, dilations = var_913, groups = var_681, pad = var_915_pad_0, pad_type = var_915_pad_type_0, strides = var_911, weight = model_22_cv3_1_2_weight_to_fp16, x = input_245_cast_fp16)[name = tensor<string, []>("op_915_cast_fp16")];
            tensor<bool, []> xi_3_interleave_0 = const()[name = tensor<string, []>("xi_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 16, 24]> xi_3_cast_fp16 = concat(axis = var_681, interleave = xi_3_interleave_0, values = (var_887_cast_fp16, var_915_cast_fp16))[name = tensor<string, []>("xi_3_cast_fp16")];
            tensor<int32, [2]> var_924 = const()[name = tensor<string, []>("op_924"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_926 = const()[name = tensor<string, []>("op_926"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_247_pad_type_0 = const()[name = tensor<string, []>("input_247_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_247_pad_0 = const()[name = tensor<string, []>("input_247_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_22_cv2_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5418944)))];
            tensor<fp16, [64]> model_22_cv2_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5713920)))];
            tensor<fp16, [1, 64, 8, 12]> input_247_cast_fp16 = conv(bias = model_22_cv2_2_0_conv_bias_to_fp16, dilations = var_926, groups = var_681, pad = input_247_pad_0, pad_type = input_247_pad_type_0, strides = var_924, weight = model_22_cv2_2_0_conv_weight_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("input_247_cast_fp16")];
            tensor<fp16, [1, 64, 8, 12]> input_249_cast_fp16 = silu(x = input_247_cast_fp16)[name = tensor<string, []>("input_249_cast_fp16")];
            tensor<int32, [2]> var_933 = const()[name = tensor<string, []>("op_933"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_935 = const()[name = tensor<string, []>("op_935"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_251_pad_type_0 = const()[name = tensor<string, []>("input_251_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_251_pad_0 = const()[name = tensor<string, []>("input_251_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv2_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5714112)))];
            tensor<fp16, [64]> model_22_cv2_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5787904)))];
            tensor<fp16, [1, 64, 8, 12]> input_251_cast_fp16 = conv(bias = model_22_cv2_2_1_conv_bias_to_fp16, dilations = var_935, groups = var_681, pad = input_251_pad_0, pad_type = input_251_pad_type_0, strides = var_933, weight = model_22_cv2_2_1_conv_weight_to_fp16, x = input_249_cast_fp16)[name = tensor<string, []>("input_251_cast_fp16")];
            tensor<fp16, [1, 64, 8, 12]> input_253_cast_fp16 = silu(x = input_251_cast_fp16)[name = tensor<string, []>("input_253_cast_fp16")];
            tensor<int32, [2]> var_941 = const()[name = tensor<string, []>("op_941"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_943 = const()[name = tensor<string, []>("op_943"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_945_pad_type_0 = const()[name = tensor<string, []>("op_945_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_945_pad_0 = const()[name = tensor<string, []>("op_945_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_22_cv2_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5788096)))];
            tensor<fp16, [64]> model_22_cv2_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv2_2_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5796352)))];
            tensor<fp16, [1, 64, 8, 12]> var_945_cast_fp16 = conv(bias = model_22_cv2_2_2_bias_to_fp16, dilations = var_943, groups = var_681, pad = var_945_pad_0, pad_type = var_945_pad_type_0, strides = var_941, weight = model_22_cv2_2_2_weight_to_fp16, x = input_253_cast_fp16)[name = tensor<string, []>("op_945_cast_fp16")];
            tensor<int32, [2]> var_952 = const()[name = tensor<string, []>("op_952"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_954 = const()[name = tensor<string, []>("op_954"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_255_pad_type_0 = const()[name = tensor<string, []>("input_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_255_pad_0 = const()[name = tensor<string, []>("input_255_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_22_cv3_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5796544)))];
            tensor<fp16, [64]> model_22_cv3_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6091520)))];
            tensor<fp16, [1, 64, 8, 12]> input_255_cast_fp16 = conv(bias = model_22_cv3_2_0_conv_bias_to_fp16, dilations = var_954, groups = var_681, pad = input_255_pad_0, pad_type = input_255_pad_type_0, strides = var_952, weight = model_22_cv3_2_0_conv_weight_to_fp16, x = input_205_cast_fp16)[name = tensor<string, []>("input_255_cast_fp16")];
            tensor<fp16, [1, 64, 8, 12]> input_257_cast_fp16 = silu(x = input_255_cast_fp16)[name = tensor<string, []>("input_257_cast_fp16")];
            tensor<int32, [2]> var_961 = const()[name = tensor<string, []>("op_961"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_963 = const()[name = tensor<string, []>("op_963"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_259_pad_type_0 = const()[name = tensor<string, []>("input_259_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_259_pad_0 = const()[name = tensor<string, []>("input_259_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_22_cv3_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6091712)))];
            tensor<fp16, [64]> model_22_cv3_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6165504)))];
            tensor<fp16, [1, 64, 8, 12]> input_259_cast_fp16 = conv(bias = model_22_cv3_2_1_conv_bias_to_fp16, dilations = var_963, groups = var_681, pad = input_259_pad_0, pad_type = input_259_pad_type_0, strides = var_961, weight = model_22_cv3_2_1_conv_weight_to_fp16, x = input_257_cast_fp16)[name = tensor<string, []>("input_259_cast_fp16")];
            tensor<fp16, [1, 64, 8, 12]> input_261_cast_fp16 = silu(x = input_259_cast_fp16)[name = tensor<string, []>("input_261_cast_fp16")];
            tensor<int32, [2]> var_969 = const()[name = tensor<string, []>("op_969"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_971 = const()[name = tensor<string, []>("op_971"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_973_pad_type_0 = const()[name = tensor<string, []>("op_973_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_973_pad_0 = const()[name = tensor<string, []>("op_973_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 64, 1, 1]> model_22_cv3_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_2_weight_to_fp16"), val = tensor<fp16, [8, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6165696)))];
            tensor<fp16, [8]> model_22_cv3_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_22_cv3_2_2_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.914p+2, -0x1.a8p+2, -0x1.a8p+2, -0x1.9e4p+2, -0x1.a2p+2, -0x1.a88p+2, -0x1.a7cp+2, -0x1.a88p+2])];
            tensor<fp16, [1, 8, 8, 12]> var_973_cast_fp16 = conv(bias = model_22_cv3_2_2_bias_to_fp16, dilations = var_971, groups = var_681, pad = var_973_pad_0, pad_type = var_973_pad_type_0, strides = var_969, weight = model_22_cv3_2_2_weight_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("op_973_cast_fp16")];
            tensor<bool, []> xi_interleave_0 = const()[name = tensor<string, []>("xi_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 8, 12]> xi_cast_fp16 = concat(axis = var_681, interleave = xi_interleave_0, values = (var_945_cast_fp16, var_973_cast_fp16))[name = tensor<string, []>("xi_cast_fp16")];
            tensor<int32, [3]> var_977 = const()[name = tensor<string, []>("op_977"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 1536]> var_978_cast_fp16 = reshape(shape = var_977, x = xi_1_cast_fp16)[name = tensor<string, []>("op_978_cast_fp16")];
            tensor<int32, [3]> var_979 = const()[name = tensor<string, []>("op_979"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 384]> var_980_cast_fp16 = reshape(shape = var_979, x = xi_3_cast_fp16)[name = tensor<string, []>("op_980_cast_fp16")];
            tensor<int32, [3]> var_981 = const()[name = tensor<string, []>("op_981"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 96]> var_982_cast_fp16 = reshape(shape = var_981, x = xi_cast_fp16)[name = tensor<string, []>("op_982_cast_fp16")];
            tensor<bool, []> var_984_interleave_0 = const()[name = tensor<string, []>("op_984_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 2016]> var_984_cast_fp16 = concat(axis = var_679, interleave = var_984_interleave_0, values = (var_978_cast_fp16, var_980_cast_fp16, var_982_cast_fp16))[name = tensor<string, []>("op_984_cast_fp16")];
            tensor<int32, [2]> var_985 = const()[name = tensor<string, []>("op_985"), val = tensor<int32, [2]>([64, 8])];
            tensor<int32, []> var_986_axis_0 = const()[name = tensor<string, []>("op_986_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 2016]> var_986_cast_fp16_0, tensor<fp16, [1, 8, 2016]> var_986_cast_fp16_1 = split(axis = var_986_axis_0, split_sizes = var_985, x = var_984_cast_fp16)[name = tensor<string, []>("op_986_cast_fp16")];
            tensor<int32, [4]> var_992 = const()[name = tensor<string, []>("op_992"), val = tensor<int32, [4]>([1, 4, 16, 2016])];
            tensor<fp16, [1, 4, 16, 2016]> var_993_cast_fp16 = reshape(shape = var_992, x = var_986_cast_fp16_0)[name = tensor<string, []>("op_993_cast_fp16")];
            tensor<int32, [4]> var_994_perm_0 = const()[name = tensor<string, []>("op_994_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<fp16, [1, 16, 4, 2016]> transpose_0 = transpose(perm = var_994_perm_0, x = var_993_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 16, 4, 2016]> input_cast_fp16 = softmax(axis = var_681, x = transpose_0)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_997 = const()[name = tensor<string, []>("op_997"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_999 = const()[name = tensor<string, []>("op_999"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1001_pad_type_0 = const()[name = tensor<string, []>("op_1001_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1001_pad_0 = const()[name = tensor<string, []>("op_1001_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_22_dfl_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_22_dfl_conv_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6166784)))];
            tensor<fp16, [1, 1, 4, 2016]> var_1001_cast_fp16 = conv(dilations = var_999, groups = var_681, pad = var_1001_pad_0, pad_type = var_1001_pad_type_0, strides = var_997, weight = model_22_dfl_conv_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_1001_cast_fp16")];
            tensor<int32, [3]> var_1002 = const()[name = tensor<string, []>("op_1002"), val = tensor<int32, [3]>([1, 4, 2016])];
            tensor<fp16, [1, 4, 2016]> var_1003_cast_fp16 = reshape(shape = var_1002, x = var_1001_cast_fp16)[name = tensor<string, []>("op_1003_cast_fp16")];
            tensor<int32, [2]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> var_1005_axis_0 = const()[name = tensor<string, []>("op_1005_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 2, 2016]> var_1005_cast_fp16_0, tensor<fp16, [1, 2, 2016]> var_1005_cast_fp16_1 = split(axis = var_1005_axis_0, split_sizes = tile_0, x = var_1003_cast_fp16)[name = tensor<string, []>("op_1005_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> cos_cast_fp16 = cos(x = pred_angle_cast_fp16)[name = tensor<string, []>("cos_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> sin_cast_fp16 = sin(x = pred_angle_cast_fp16)[name = tensor<string, []>("sin_cast_fp16")];
            tensor<fp16, [1, 2, 2016]> var_1010_cast_fp16 = sub(x = var_1005_cast_fp16_1, y = var_1005_cast_fp16_0)[name = tensor<string, []>("op_1010_cast_fp16")];
            tensor<fp16, []> _inversed_1012_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_1012_y_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 2, 2016]> _inversed_1012_cast_fp16 = mul(x = var_1010_cast_fp16, y = _inversed_1012_y_0_to_fp16)[name = tensor<string, []>("_inversed_1012_cast_fp16")];
            tensor<int32, [2]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1013_axis_0 = const()[name = tensor<string, []>("op_1013_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 1, 2016]> var_1013_cast_fp16_0, tensor<fp16, [1, 1, 2016]> var_1013_cast_fp16_1 = split(axis = var_1013_axis_0, split_sizes = tile_1, x = _inversed_1012_cast_fp16)[name = tensor<string, []>("op_1013_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> var_1016_cast_fp16 = mul(x = var_1013_cast_fp16_0, y = cos_cast_fp16)[name = tensor<string, []>("op_1016_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> var_1017_cast_fp16 = mul(x = var_1013_cast_fp16_1, y = sin_cast_fp16)[name = tensor<string, []>("op_1017_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> x_5_cast_fp16 = sub(x = var_1016_cast_fp16, y = var_1017_cast_fp16)[name = tensor<string, []>("x_5_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> var_1019_cast_fp16 = mul(x = var_1013_cast_fp16_0, y = sin_cast_fp16)[name = tensor<string, []>("op_1019_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> var_1020_cast_fp16 = mul(x = var_1013_cast_fp16_1, y = cos_cast_fp16)[name = tensor<string, []>("op_1020_cast_fp16")];
            tensor<fp16, [1, 1, 2016]> y_cast_fp16 = add(x = var_1019_cast_fp16, y = var_1020_cast_fp16)[name = tensor<string, []>("y_cast_fp16")];
            tensor<bool, []> var_1023_interleave_0 = const()[name = tensor<string, []>("op_1023_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 2, 2016]> var_1023_cast_fp16 = concat(axis = var_681, interleave = var_1023_interleave_0, values = (x_5_cast_fp16, y_cast_fp16))[name = tensor<string, []>("op_1023_cast_fp16")];
            tensor<fp16, [1, 2, 2016]> anchor_points_to_fp16 = const()[name = tensor<string, []>("anchor_points_to_fp16"), val = tensor<fp16, [1, 2, 2016]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6166912)))];
            tensor<fp16, [1, 2, 2016]> xy_cast_fp16 = add(x = var_1023_cast_fp16, y = anchor_points_to_fp16)[name = tensor<string, []>("xy_cast_fp16")];
            tensor<fp16, [1, 2, 2016]> var_1025_cast_fp16 = add(x = var_1005_cast_fp16_0, y = var_1005_cast_fp16_1)[name = tensor<string, []>("op_1025_cast_fp16")];
            tensor<bool, []> var_1027_interleave_0 = const()[name = tensor<string, []>("op_1027_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 2016]> var_1027_cast_fp16 = concat(axis = var_681, interleave = var_1027_interleave_0, values = (xy_cast_fp16, var_1025_cast_fp16))[name = tensor<string, []>("op_1027_cast_fp16")];
            tensor<fp16, [1, 2016]> var_671_to_fp16 = const()[name = tensor<string, []>("op_671_to_fp16"), val = tensor<fp16, [1, 2016]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6175040)))];
            tensor<fp16, [1, 4, 2016]> dbox_cast_fp16 = mul(x = var_1027_cast_fp16, y = var_671_to_fp16)[name = tensor<string, []>("dbox_cast_fp16")];
            tensor<fp16, [1, 8, 2016]> var_1029_cast_fp16 = sigmoid(x = var_986_cast_fp16_1)[name = tensor<string, []>("op_1029_cast_fp16")];
            tensor<bool, []> var_1031_interleave_0 = const()[name = tensor<string, []>("op_1031_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 13, 2016]> var_1031_cast_fp16 = concat(axis = var_681, interleave = var_1031_interleave_0, values = (dbox_cast_fp16, var_1029_cast_fp16, pred_angle_cast_fp16))[name = tensor<string, []>("op_1031_cast_fp16")];
            tensor<string, []> var_1031_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_1031_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 13, 2016]> var_1031 = cast(dtype = var_1031_cast_fp16_to_fp32_dtype_0, x = var_1031_cast_fp16)[name = tensor<string, []>("cast_10")];
        } -> (var_1031);
}